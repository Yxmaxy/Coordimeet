version: '3'

services:
  db-prod:
    container_name: coordimeet-db-prod
    image: postgres:14.9-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data/
    env_file:
      - .env
    restart: always

  cache-prod:
    container_name: coordimeet-cache-prod
    image: redis:7.2.4-alpine
    ports:
      - "${CACHE_PORT}:6379"
    depends_on:
      - db-prod
    volumes:
      - ./cache-prod:/data
    env_file:
      - .env
    restart: always

  backend-prod:
    container_name: coordimeet-backend-prod
    build:
      context: ./backend
      dockerfile: DockerfileProd
    volumes:
      - ./backend:/app
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - db-prod
      - cache-prod
    env_file:
      - .env
    restart: always

  celery:
    container_name: coordimeet-celery
    build:
      context: ./backend
      dockerfile: DockerfileCelery
    volumes:
      - ./backend:/app
    depends_on:
      - db-prod
      - cache-prod
      - backend-prod
    env_file:
      - .env
    restart: always

  frontend_prod:
    container_name: coordimeet-frontend-prod
    build:
      context: ./
      dockerfile: ./frontend/DockerfileProd
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend-prod
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: always
    env_file:
      - .env

volumes:
  db-data:
    driver: local
  node_modules:

